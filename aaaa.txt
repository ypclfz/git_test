<template>
	<div class="main">
	<div class="left">
		<div style="    
	padding-left: 10px;
    font-size: 14px;
    height: 40px;
    line-height: 40px;
    background-color: #eef1f6;
    border: 1px solid #dfe6ec;
    border-bottom: none;">
			<span>期限管控</span>
			<el-select v-model="day" placeholder="请选择期限" size="mini" style="width: 80px">
			    <el-option
			      v-for="item in days"
			      :key="item"
			      :label="`${item}天内`"
			      :value="item">
			    </el-option>
			  </el-select>
		</div>
		<el-tree
			:data="treeData"
			:render-content="renderContent"
			node-key="value"
			highlight-current
		  	@current-change="handleCurrentChange"
			:style="`font-size: 12px; height:${innerHeight - 98}px; overflow-y: auto; overflow-x: hidden;`"
		>
		</el-tree>
	</div>
	<div class="right">
		<table-component :tableOption="option" :data="tableData"></table-component>
	</div>

	<app-shrink :visible.sync="dialogShrinkVisible" :title="currentRow.title">
      
      <span slot="header" style="margin-left: 10px;">
        <el-tag>{{ currentRow.flow_node }}</el-tag>
        <el-tag>{{ currentRow.serial }}</el-tag>
      </span>

      <el-tabs v-model="activeName">        
        <el-tab-pane label="前往处理" name="finish">
          <task-finish :id="currentRow.id"></task-finish>
        </el-tab-pane>
        <el-tab-pane label="详细信息" name="edit">          
          <information :row="currentRow"></information>          
        </el-tab-pane>
        <el-tab-pane label="相关任务" name="cccc">          
          <detail :row="currentRow" style="margin: 10px 0;"></detail>          
        </el-tab-pane>
      </el-tabs>

    </app-shrink>
</div>
</template>

<script>
import AxiosMixins from '@/mixins/axios-mixins'
import TableComponent from '@/components/common/TableComponent'
import { mapGetters } from 'vuex'

import AppShrink from '@/components/common/AppShrink'
import TaskFinish from '@/components/common/TaskFinish'
import Information from '@/components/page_extension/TaskCommon_information'
import Detail from '@/components/page_extension/TaskCommon_detail'

export default {
	name: 'taskExpiring',
	mixins: [AxiosMixins],
	data () {
		return {
			option: {
				'is_header': false,
				'is_pagination': false,
				'is_border': false,
				'height': 'default4',
				'columns': [
				       
					{type: 'text', label: '案号', prop: 'apn' ,width: '200'},
					{type: 'text', label: '案件名称', prop: 'title',width: '200'},
					{type: 'text', label: '管制事项', prop: 'name',width: '200'},
					{type: 'text', label: '流程节点', prop: 'node_name',width: '200'},
					{type: 'text', label: '承办人', prop: 'person_in_charge_name',width: '200'},
					{type: 'text', label: '指定期限', prop: 'due_time',width: '200'},
					{type: 'text', label: '内部绝限', prop: 'inner_deadline',width: '200'},
					{type: 'text', label: '法定期限', prop: 'deadline',width: '200'},
					{
						type: 'action',
						width: '100',
						btns: [
							{	
								btn_type: 'text',

								label: '邮件提醒'
							}
							
						]
					}
				],
				'highlightCurrentRow': true, 
        		'rowClick': this.handleRowClick,

			},
			tableData: [],
			treeData: [],
			day: '2',
			days: ['1','2','3','5','8','10'],
			currentRow: {},
			activeName: 'finish',
			dialogShrinkVisible: false,
		}
	},
	computed: {
		...mapGetters([
	      'innerHeight',
	    ]),
	},
	methods: {
		renderContent(h, { node, data, store }) {
	        return (
	          <span>
	            <span>
	              <span>{node.label}({data.count})</span>
	            </span>
	            <span></span>
	          </span>
	          
	        );
      	},
      	handleCurrentChange (d) {
      		const url = "/api/tasks/expiring";
      		const data = {
      			type: d.value,
      			days: this.days
      		};
      		const success = _=>{
      			this.tableData = _.data;
      		}

      		this.axiosPost({url, data, success});
      	},
      	handleRowClick (row) { 
	      this.currentRow = row;
	      if( !this.dialogShrinkVisible ) this.dialogShrinkVisible = true;
	    }
	},
	created () {
		const url = '/api/tasks/expiring';
		const success = _=>{this.treeData = _.data};

		this.axiosGet({url, success});
	},
	components: {
		TableComponent,
		AppShrink,
		TaskFinish,
		Information,
		Detail,
	}

}
</script>

